@model LoginRegistrationMVC.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="auth-container">
    <div class="auth-header">
        <h2>Create Account</h2>
        <p>Join us today and get started</p>
    </div>

    <div id="register-message" class="alert alert-danger" style="display: none;"></div>

    <form id="register-form" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(m => m.Name, "Full Name")
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Enter your full name" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email, "Email Address")
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Enter your email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, "Password")
            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Create a password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, "Confirm Password")
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm your password" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Gender, "Gender")
            @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
            {
                new SelectListItem { Text = "Select Gender", Value = "", Selected = true },
                new SelectListItem { Text = "Male", Value = "Male" },
                new SelectListItem { Text = "Female", Value = "Female" },
                new SelectListItem { Text = "Other", Value = "Other" }
            }, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.DateOfBirth, "Date of Birth")
            @Html.TextBoxFor(m => m.DateOfBirth, new { @type = "date", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Image, "Profile Image")
            @Html.TextBoxFor(m => m.Image, new { @type = "file", @class = "form-control", @accept = "image/*" })
            @Html.ValidationMessageFor(m => m.Image, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">
                Create Account
            </button>
        </div>
    </form>

    <div class="auth-links">
        <p>Already have an account? <a href="@Url.Action("Login", "Account")">Sign in here</a></p>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var loginUrl = "@Url.Action("Login", "Account")";
        var dashboardUrl = "@Url.Action("Dashboard", "Account")";
        var registerUrl = "@Url.Action("Register", "Account")";
    </script>
    <script src="~/js/site.js"></script>
}