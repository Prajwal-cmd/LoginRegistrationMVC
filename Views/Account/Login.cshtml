@model LoginRegistrationMVC.Models.LoginViewModel
@{
    ViewBag.Title = "Login";
}

<div class="auth-container">
    <div class="auth-header">
        <h2>Welcome Back</h2>
        <p>Please sign in to your account</p>
    </div>

    <div id="login-message" class="alert alert-danger" style="display: none;"></div>

    <form id="login-form">
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(m => m.Email, "Email Address")
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Enter your email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, "Password")
            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Enter your password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">
                Sign In
            </button>
        </div>
    </form>

    <div class="auth-links">
        <p>Don't have an account? <a href="@Url.Action("Register", "Account")">Create one here</a></p>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var loginUrl = "@Url.Action("Login", "Account")";
        var dashboardUrl = "@Url.Action("Dashboard", "Account")";
        var registerUrl = "@Url.Action("Register", "Account")";
    </script>
    <script src="~/js/site.js"></script>
}